//////obtener todos los productos
query getAllProducts{
  product{
    id
    name
  }
}
/// obtener las categorias 

query getAllCategories{
  getAllCategories{
    name
  }
}

{
  getAllCategories{
    name
  }
}
//// agregar un nuevo producto
/// se puede pasar o no una categoria
mutation {
  addProduct(category: 1, name: "toritassas", description: "dsds", price: 50, stock: 50, image: "nico"){
    id
  }
}

//eliminar un producto por su id 
mutation{
  deleteById(id:2)
}
/// traer un producto por Id
{
  productById (id:6){
    name
    description
    price
    stock
    image
  }
}
/////

////actualizar una categoria, recibe un para metro id y un input con la data que se va a actualizar
mutation {
  updateCategory(id: 1 , input: {
    name: "franciscotov",
    description: "hope is a good",
  })
}

//// AGREGAR CATEGORIA
mutation{
  addCategory(name: "fran", description: "entro" ){
    name
}

// ESTE ES UN EJEMPLO DE AGREGAR CATEGORIA PARA PETICIONES DESDE EL FRONT
mutation addCategory ($name: String!, $description: String!){
    addCategory(name: $name, description: $description) {
      name
    }
  }
//buscar producto con su categoria segun su id
{
    productCategory(id:1){
    name
    categories{
      name
    }
  }
  }


//// PARA ELIMINAR UNA CATEGORIA
mutation{
	deleteCategory(id:1)
}

//PARA AGREGAR UNA CATEGORIA A UN PRODUCTO
mutation{
  addCategoryToProduct(idProduct:1,idCategory:1){
   	name
  }
}

//PARA ELIMINAR UNA CATEGORIA DE UN PRODUCTO
mutation{
  removeCategoryFromProduct(idProduct:1,idCategory:1){
   	name
  }
}
// PARA OBTENER TODOS LOS PRODUCTOS DE UNA CATEGORIA (POR NOMBRE)
query
  {
    getProductByCategoryName(name:"franciscotov") {
      id
      name
      price
      stock
      image
    }
  }