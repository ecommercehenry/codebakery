//////obtener todos los productos
query getAllProducts{
  product{
    id
    name
  }
}
///
obtener todos los elementos de un array de ids 

{
  getProductByArray(array:[1,2,2,3,4]) {
    id
    name
  }
}

/// obtener las categorias 

query getAllCategories{
  getAllCategories{
    name
  }
}

{
  getAllCategories{
    name
  }
}
//// agregar un nuevo producto modificado con seguridad
mutation addProduct($category: String!, $name: String!, $description: String!, $price: Float!, $stock: Int!, $image: String!){
  addProduct(category: $category, name: $name, description: $description, price: $price, stock:$stock, image:$image){
    __typename
    ... on product{
      id
      name
      description
      price
      stock
      image
    }
    __typename
    ... on error {
      name
      detail
    }
  }
}

//eliminar un producto por su id 
mutation{
  deleteById(id:2)
}
/// traer un producto por Id
{
  productById (id:6){
    name
    description
    price
    stock
    image
  }
}
/////

////actualizar una categoria, recibe un para metro id y un input con la data que se va a actualizar
mutation {
  updateCategory(id: 1 , input: {
    name: "bittersweet"
  })
}

//// AGREGAR CATEGORIA
mutation{
  addCategory(name:"Spicy"){
   	id
  }
}


//traer todas las categorias 
{
    categories{
      id
      name
    }
  }

// ESTE ES UN EJEMPLO DE AGREGAR CATEGORIA PARA PETICIONES DESDE EL FRONT
mutation addCategory ($name: String!){
    addCategory(name: $name) {
      name
    }
  }
//buscar producto con su categoria segun su id
{
    productCategory(id:1){
    name
    categories{
      name
    }
  }
  }



//// PARA ELIMINAR UNA CATEGORIA
mutation{
	deleteCategory(id:1)
}

//PARA AGREGAR UNA CATEGORIA A UN PRODUCTO
mutation{
  addCategoryToProduct(idProduct:1,idCategory:1){
   	name
  }
}

//PARA ELIMINAR UNA CATEGORIA DE UN PRODUCTO, actualizada con seguridad
mutation removeCategoryFromProduct($idProduct:Int!, $idCategory:Int!){
  removeCategoryFromProduct(idProduct: $idProduct, idCategory: $idCategory){
      __typename
     ... on product {
      id
      name
    }
    __typename
    ... on error {
      name
      detail
    }
  }
}


// PARA AGREGAR UN USUARIO actualizada con nuevo modelo
mutation createUser($name: String!, $password: String!, $email: String!, $role: String!){
  createUser(name: $name, password: $password, email: $email, role:$role){
    __typename
    ... on user{
      name
      id
      email
      role
    }
    __typename
    ... on error {
      name
      detail
    }
  }
}

// PARA LA MODIFICACION DE UN USUARIO Actualizada con proteccion
mutation modifyUser($id: Int!, $name: String, $password:String, $email: String, $role:String){
  modifyUser(id: $id ,name: $name, password: $password, email: $email, role:$role){
    __typename
    ... on user{
      name
      id
      email
      role
    }
    __typename
    ... on error {
      name
      detail
    }
  }
}
// PARA OBTENER TODOS LOS PRODUCTOS DE UNA CATEGORIA (POR NOMBRE)
query
  {
    getProductByCategoryName(name:"Bitter") {
      id
      name
      price
      stock
      image
    }
  }

  // PARA OBTENER UN PRODUCTO POR NOMBRE
  query 
  {
  getProductByName(name : "Cuchillo"){
    name

  }
}

// PARA OBTENER TODOS LOS USUARIOS (SIN CONTRASEÑA) CON SUS PRODUCTOS Y CON SUS REVIEWS
{
  getAllUsers{name, email, products{
    id
    name
    description
    price
    stock
    image
    categories{
      id 
      name  
    }  
  }, reviews{
    id
    title
  	description
    stars
  }}


{
  validateUser(name: "Fran", password: "hw"){
  	__typename
    ...on user {
      name
    }
    ...on error {
      name
      detail
    }
  }
}

// MUTATION PARA MODIFICAR PRODUCTOS
mutation modifyProduct ($id: Int!, $dataToModify: productInput!){
  modifyProduct(id: $id, dataToModify: $dataToModify){
    __typename
    ... on product {
      id
      name
    }
    __typename
    ... on error {
      name
      detail
    }
  }
}

{
  "id": 1,
  "dataToModify": {
    "name": "Bonito"
  }
}


// MUTATION PARA ACTUALIZAR UNA CATEGORIA
mutation updateCategory ($id: Int!, $input: categoryInput!){
  updateCategory(id: $id, input: $input){
    __typename
    ... on category {
      id
      name
    }
    __typename
    ... on error {
      name
      detail
    }
  }
}


// MUTACIÓN PARA AGREGAR CATEGORÍA A UN PRODUCTO
mutation addCategoryToProduct($idProduct:Int!, $idCategory:Int!){
  addCategoryToProduct(idProduct: $idProduct, idCategory: $idCategory){
      __typename
     ... on product {
      id
      name
    }
    __typename
    ... on error {
      name
      detail
    }
  }
}

{
  "idProduct": 9,
  "idCategory": 5
}


// PARA ELIMINAR CATEGORIA
mutation deleteCategory($id:Int!){
  deleteCategory(id: $id){
      __typename
     ... on booleanDelete {
      booleanDelete
    }
    __typename
    ... on error {
      name
      detail
    }
  }
}

{
 "id": 8
}

{
 "id": 1
}


// MUTACIÓN PARA ELIMINAR PRODUCTO POR ID
mutation deleteById($id:Int!){
  deleteById(id: $id){
      __typename
     ... on booleanDelete {
      booleanDelete
    }
    __typename
    ... on error {
      name
      detail
    }
  }
}